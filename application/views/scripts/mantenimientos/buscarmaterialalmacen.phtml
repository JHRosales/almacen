<?php
$library = new Libreria_Pintar();
$TipoBusqueda = array(array("0", "GENERAL"), array("1", "ID"), array("2", "NOMBRE"), array("3", "TIPOMATERIAL"), array("4", "MARCA"));
?>
<div id="panelMantenimientoProducto" align="center" class="ui-widget ui-widget-content ui-corner-top" style="width: 99%;margin: 3px; height:95%;">
    <div class="ui-widget ui-state-default ui-corner-top ui-title">
        <label>Mantenimiento Materiales Almacen</label>
    </div>
    <div id="dialogBuscarContribuyentePredio">
        <table class="ui-panelLayout-main">
            <tr>
                <td style="vertical-align: top;">
                    <table border="0" style="margin-left:45px;">
                        <tr>
                            <td>
                                <b> Datos Busqueda</b>
                            </td>
                        </tr>
                        <tr class="rowdatospsm" id="rowdatospsm">
                            <td style="text-align: left">
                                <select id="cbotipob" name="cbotipob" style="width:140px;">
                                    <?php echo $library->ContenidoCombo($TipoBusqueda, $this->ctipmon, 0); ?>
                                </select>
                            </td>
                            <td>Texto de busqueda:</td>
                            <TD colspan="3">
                                <input class="ui-text pnl" id="c_textbusqueda" onkeypress="if(event.keyCode==13){buscarMate();}" style="width:100%" />
                            </TD>
                            <td> &nbsp;&nbsp;</td>
                            <td>
                                <button id="btnbuscar" name="btnbuscar" onclick="buscarMate()">Buscar</button>
                            </td>
                        </tr>

                        <!--  <tr class="rowBuscarContribuyente">
                            <td width="100" style="text-align: left">C&oacute;digo:</td>
                            <td width="10">&nbsp;</td>
                            <td width="230" style="text-align: left">Nombre:</td>
                            <td width="10">&nbsp;</td>
                            <td width="230">&nbsp;</td>
                            <td width="10">&nbsp;</td>
                            <td width="230" colspan="5" style="text-align: left"></td>
                            <td width="20">&nbsp;</td>
                        </tr>
                        <tr class="rowBuscarContribuyente" id="panelBuscarContribuyente">
                            <td>
                                <input class="ui-text" id="c_codigoprod" onkeypress="if(event.keyCode==13){buscarMate();}" maxlength="10" style="width:90px" />
                            </td>
                            <td>&nbsp;</td>
                            <td colspan="3">
                                <input class="ui-text pnl" id="c_nombreprod"  onkeypress="if(event.keyCode==13){buscarMate();}" style="width:100%" />
                            </td>
                            <td>&nbsp;</td>
                            <td colspan="5" style="text-align: left; display: none">
                                <input class="ui-text pnl" id="c_desc" onkeypress="if(event.keyCode==13){buscarMate();}" style="width:50%" />
                            </td>

                        </tr>
                        <tr>
                            <td colspan="13" height="8px"></td>
                        </tr>-->

                    </table>
                </td>
            </tr>
        </table>
    </div>
    <div id="dialogMensaje">
    </div>

    <div id="panelListaMate" align="left" style="width: 99%;margin: 20px;">
        <table id="tblListaMate"></table>
        <div id="ptblListaMate"></div>
    </div>
    <br />


</div>


<script type="text/javascript">
    var filteredIDs = new Array();

    optionPersona = {
        width: 900,
        height: 250,
        colNames: [
            'Codigo',
            'Nombre',


            'Marca',
            'Proveedor',
            'idUnidadMed',
            'Unidad de Medida',
            'Stock',
            'Stock Minimo',
            'Compra',
            'Estado'
        ],
        colModel: [{
                name: 'idMaterial',
                index: 'idMaterial',
                width: 60
            },
            {
                name: 'vNombre',
                index: 'vNombre',
                width: 280
            },

            {
                name: 'vMarca',
                index: 'vMarca',
                width: 100
            },
            {
                name: 'Uproveedor',
                index: 'Uproveedor',
                width: 100
            },
            {
                name: 'idUnidadMed',
                index: 'idUnidadMed',
                width: 80,
                hidden: true
            },
            {
                name: 'vUnidadMed',
                index: 'vUnidadMed',
                width: 120
            },
            {
                name: 'nStock',
                index: 'nStock',
                width: 70
            },
            {
                name: 'nStockMinimo',
                index: 'nStockMinimo',
                width: 70
            },
            {
                name: 'cCompra',
                index: 'cCompra',
                width: 70
            },
            {
                name: 'vEstado',
                index: 'vEstado',
                width: 70,
                hidden: false,
                editOptions: {
                    value: "1:0",
                    defaultvalue: "1"
                },
                formatter: chkEliminar
            },
        ],
        ignoreCase: true,
        caption: "&nbsp;&nbsp;&nbsp;Materiales Almacen Registrados",
        ondblClickRow: function(id) {
            var row = $(this).getRowData(id);
            verMaterial();
        },


        afterInsertRow: function(rowid, aData) {
            switch (
                aData.nestado
            ) {
                case '1':
                    break;
                case '0':

                    jQuery("#tblListaMate").jqGrid('setCell', rowid, 'cidpers', '', {
                        color: 'red'
                    });
                    jQuery("#tblListaMate").jqGrid('setCell', rowid, 'crazsoc', '', {
                        color: 'red'
                    });
                    jQuery("#tblListaMate").jqGrid('setCell', rowid, 'vnrodoc', '', {
                        color: 'red'
                    });
                    jQuery("#tblListaMate").jqGrid('setCell', rowid, 'nestado', '', {
                        color: 'red'
                    });
                    break;
            }
        },
        onSelectRow: function(id) {
            var row = $(this).getRowData(id);
        },
        loadComplete: function() {
            this.p.lastSelected = lastSelected; // set this.p.lastSelected
        }

    };


    function chkEliminar(cellvalue, options, rowObject) {
        return '<input  type="checkbox" id="chkconcluirexp_' + options.rowId + '" ' + (cellvalue == '1' ? ' checked="checked"' : '') +
            'onclick="changeEstadomaterial(' + options.rowId + ')" ' + (cellvalue == '0' ? '  ' : '') + '/>';
    }

    function changeEstadomaterial(rowId) {

        var row = jQuery("#tblListaMate").jqGrid('getRowData', rowId);
        openDialogConfirm1("Cambiar estado?", 350, {
            "Si": function() {
                var parmter = {};
                parmter.idMaterial = row.idMaterial;
                closeDialog("jqDialogConfirmacion1");
                $.post(path + "mantenimientos/anularmaterialalmacen", parmter, updCheckconcluir, 'json');
            },
            "No": function() {
                //ProcesoBuscarRuta(''); chkrecep_5
                $("#chkconcluirexp_" + rowId).attr('checked', true);
                closeDialog("jqDialogConfirmacion1");

            }
        });
    }

    function updCheckconcluir(data) {
        buscarMate();
    }
    eliminar = function(a) {
        var selr = $('#tblListaMate').jqGrid('getGridParam', 'selrow');
        var row = $("#tblListaMate").jqGrid('getRowData', selr);
        if (row.idMaterial == "" || row.idMaterial == undefined) {
            openDialogWarning("Seleccione un registro para eliminar.");
            return;
        }
        parameters = {
            "idMaterial": row.idMaterial
        };

        //openDialogData2("mantenimientos/eliminarpersona", parameters, 460);
        openDialogConfirm1("\u00BFEst\u00E1 seguro de eliminar datos?", 350, {

            "si": function() {
                //openDialogData2("mantenimientos/eliminarpersona", parameters, 460);
                $.ajax({
                    url: jQuery.scriptPath + "index.php/mantenimientos/borrarmaterialalmacen",
                    type: 'POST',
                    cache: false,
                    data: parameters,
                    beforeSend: function(data) {

                    },
                    success: function(requestData) {
                        var IS_JSON = true;
                        try {
                            var datos = $.parseJSON(requestData);
                            //console.log(datos[0].msj);
                            if (datos[0].msj == "ok") {
                                openDialogWarning("Eliminado Correctamente");
                                closeDialog("jqDialogConfirmacion1");
                                closeDialog('jqDialog2');
                                $("#c_codigocontrib").val("");
                                buscarMate();
                            } else {
                                openDialogWarning("Error no se puede Eliminar el Material");
                            }

                        } catch (err) {
                            IS_JSON = false;
                            closeDialog("jqDialogConfirmacion1");
                            $("#c_codigocontrib").val("");
                            openDialogWarning("Error no se puede Eliminar el Material");
                        }


                    },
                    error: function(requestData, strError, strTipoError) {
                        openDialogWarning("Error.");
                        //$("#result").html("Error " + strTipoError + ': ' + strError);
                    },
                    complete: function(requestData, exito) {}


                });
            },

            "no": function() {
                closeDialog("jqDialogConfirmacion1");

            }
        })


    };

    nuevaMaterial = function() {
        parameters = {
            "idsigma": '...'
        };
        openDialogData3("mantenimientos/materialalmacen", parameters, 500);
    };
    verMaterial = function() {
        var selr = $('#tblListaMate').jqGrid('getGridParam', 'selrow');
        var row = $("#tblListaMate").jqGrid('getRowData', selr);
        if (row.idMaterial == "" || row.idMaterial == undefined) {
            openDialogWarning("Seleccione un registro para editar.");
            return;
        }
        parameters = {
            "idsigma": row.idMaterial
        };

        openDialogData3("mantenimientos/materialalmacen", parameters, 500);

    };


    function buttonsGridPerson() {
        $("#tblListaMate")
            .navGrid('#ptblListaMate', {
                edit: false,
                add: false,
                del: false,
                search: false,
                refresh: false
            })

            .navButtonAdd('#ptblListaMate', {
                caption: "Agregar&nbsp;&nbsp;",
                buttonicon: "ui-icon-plus",
                onClickButton: function() {
                    nuevaMaterial();
                },
                position: "last"
            })
            .navSeparatorAdd()


            .navButtonAdd('#ptblListaMate', {
                caption: "Editar&nbsp;&nbsp;",
                buttonicon: "ui-icon-pencil",
                onClickButton: function() {
                    verMaterial();
                },
                position: "last"
            })
            .navSeparatorAdd()

            .navButtonAdd('#ptblListaMate', {
                caption: "Eliminar&nbsp;&nbsp;",
                buttonicon: "ui-icon-pencil",
                onClickButton: function() {
                    eliminar();
                },
                position: "last"
            })
            .navSeparatorAdd()

            .navButtonAdd('#ptblListaMate', {
                caption: "Imprimir&nbsp;&nbsp;",
                buttonicon: "ui-icon-print",
                onClickButton: function() {
                    imprimir();
                },
                position: "last"
            })
            .navSeparatorAdd();

        $("#tblListaMate").jqGrid('filterToolbar', {
            stringResult: true,
            searchOnEnter: false,
            defaultSearch: 'cn',
            ignoreCase: true
        });
    }

    //Get Rows Selected
    getRows = function() {
        var grid = $("#tblListaMate");
        //    var myData = grid.jqGrid('getGridParam', 'lastSelectedData');
        var filteredData = grid.jqGrid('getGridParam', 'lastSelected')
        console.log("grid.jqGrid('getGridParam', 'data');");
        console.log(filteredData);
    }



    var oldFrom = $.jgrid.from,
        lastSelected;

    $.jgrid.from = function(source, initalQuery) {
        var result = oldFrom.call(this, source, initalQuery),
            old_select = result.select;
        result.select = function(f) {
            lastSelected = old_select.call(this, f);
            return lastSelected;
        };
        return result;
    };



    function imprimir() {

        host = '<?php echo $this->util()->getPath(); ?>report/';
        // window.open(host + "rptMateriales.php", '_blank');

        var rowData = $('#tblListaMate').jqGrid('getGridParam', 'lastSelected');
        // console.log(rowData);

        //Forma 1

        // let windowName = 'w_' + Date.now() + Math.floor(Math.random() * 100000).toString();
        // var form = document.createElement("form");
        // form.setAttribute("method", "post");
        // form.setAttribute("action", host + "rptMateriales.php");
        // form.setAttribute("target", windowName);
        // var hiddenField = document.createElement("input");
        // hiddenField.setAttribute("type", "hidden");
        // hiddenField.setAttribute("name", "message");
        // hiddenField.setAttribute("value", rowData);
        // form.appendChild(hiddenField);
        // document.body.appendChild(form);
        // window.open('', windowName);
        // form.submit();



        //Forma 2
        // var obj = {
        //     "a": [1, 2, [3, 4]],
        //     "b": "a",
        //     "c": {
        //         "x": [1],
        //         "y": [2, 3],
        //         "z": [{
        //             "a": "Hello",
        //             "b": "World"
        //         }, {
        //             "a": "Hallo",
        //             "b": "Welt"
        //         }]
        //     }
        // };
        var objeto = {
            "data": rowData
        }
        var form = getForm(host + "rptMateriales.php", "_blank", objeto, "post");
        document.body.appendChild(form);
        form.submit();
        form.parentNode.removeChild(form);

    }

    function getForm(url, target, values, method) {
        function grabValues(x) {
            var path = [];
            var depth = 0;
            var results = [];

            function iterate(x) {
                switch (typeof x) {
                    case 'function':
                    case 'undefined':
                    case 'null':
                        break;
                    case 'object':
                        if (Array.isArray(x))
                            for (var i = 0; i < x.length; i++) {
                                path[depth++] = i;
                                iterate(x[i]);
                            }
                        else
                            for (var i in x) {
                                path[depth++] = i;
                                iterate(x[i]);
                            }
                        break;
                    default:
                        results.push({
                            path: path.slice(0),
                            value: x
                        })
                        break;
                }
                path.splice(--depth);
            }
            iterate(x);
            return results;
        }
        var form = document.createElement("form");
        form.method = method;
        form.action = url;
        form.target = target;

        var values = grabValues(values);

        for (var j = 0; j < values.length; j++) {
            var input = document.createElement("input");
            input.type = "hidden";
            input.value = values[j].value;
            input.name = values[j].path[0];
            for (var k = 1; k < values[j].path.length; k++) {
                input.name += "[" + values[j].path[k] + "]";
            }
            form.appendChild(input);
        }
        return form;
    }

    buscarMate = function() {
        var params = '[' +
            '["@tBusqueda", "' + $("#cbotipob").val() + '"],' +
            '["@vDatoBus", "' + $("#c_textbusqueda").val() + '"]' +
            ']';
        parameters = {
            "name": "tblListaMate",
            "procedure": "almacen.Bus_materialAlmacen",
            "print": "true",
            "parameters": params
        };

        procesarProcedimientoJSON(
            "panelListaMate", "tblListaMate", optionPersona, parameters, null, buttonsGridPerson
        );
    };


    $(function() {
        buscarMate();
        $("#btnbuscar").button();
    });
</script>